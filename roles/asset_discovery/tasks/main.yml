---
- name: 收集系统基本信息
  raw: |
    echo "=== 系统信息 ==="
    uname -a
    echo "=== 操作系统信息 ==="
    cat /etc/os-release 2>/dev/null || cat /etc/redhat-release 2>/dev/null || echo "无法获取系统信息"
    echo "=== 内核版本 ==="
    uname -r
    echo "=== 架构 ==="
    uname -m
  register: system_info
  tags: [asset, basic_info]

- name: 获取CPU信息
  raw: |
    echo "=== CPU信息 ==="
    cat /proc/cpuinfo | grep -E "model name|processor|physical id|core id" | head -20
    echo "=== CPU核心数 ==="
    nproc 2>/dev/null || grep -c processor /proc/cpuinfo 2>/dev/null || echo "无法获取CPU核心数"
  register: cpu_info
  tags: [asset, cpu]

- name: 获取内存信息
  raw: |
    echo "=== 内存信息 ==="
    free -h 2>/dev/null || echo "无法获取内存信息"
    echo "=== 内存详细信息 ==="
    cat /proc/meminfo | head -10
  register: memory_info
  tags: [asset, memory]

- name: 获取磁盘信息
  raw: |
    echo "=== 磁盘使用情况 ==="
    df -h
    echo "=== 磁盘分区信息 ==="
    fdisk -l 2>/dev/null | head -20 || echo "无法获取分区信息"
  register: disk_info
  tags: [asset, disk]

- name: 获取网络接口信息
  raw: |
    echo "=== 网络接口 ==="
    ip addr show 2>/dev/null || ifconfig 2>/dev/null || echo "无法获取网络信息"
    echo "=== 路由表 ==="
    ip route show 2>/dev/null || route -n 2>/dev/null || echo "无法获取路由信息"
  register: network_info
  tags: [asset, network]

- name: 获取系统负载
  raw: |
    echo "=== 系统负载 ==="
    uptime
    echo "=== 进程信息 ==="
    ps aux | head -10
  register: load_info
  tags: [asset, load]

- name: 获取运行的服务
  raw: |
    echo "=== 运行的服务 ==="
    systemctl list-units --type=service --state=running 2>/dev/null | head -20 || service --status-all 2>/dev/null | head -20 || echo "无法获取服务信息"
  register: services_info
  tags: [asset, services]

- name: 获取已安装的软件包数量
  raw: |
    echo "=== 软件包信息 ==="
    if command -v dpkg >/dev/null 2>&1; then
      echo "Debian/Ubuntu系统"
      dpkg -l | wc -l
    elif command -v rpm >/dev/null 2>&1; then
      echo "RHEL/CentOS系统"
      rpm -qa | wc -l
    else
      echo "未知包管理器"
    fi
  register: packages_count
  tags: [asset, packages]

- name: 获取系统用户信息
  raw: |
    echo "=== 用户信息 ==="
    cat /etc/passwd | wc -l
    echo "=== 当前登录用户 ==="
    who
  register: users_count
  tags: [asset, users]

- name: 获取开放端口
  raw: |
    echo "=== 开放端口 ==="
    ss -tuln 2>/dev/null | head -20 || netstat -tuln 2>/dev/null | head -20 || echo "无法获取端口信息"
  register: open_ports
  tags: [asset, ports]

- name: 获取系统时间
  raw: |
    echo "=== 系统时间 ==="
    date
    echo "=== 时区信息 ==="
    timedatectl 2>/dev/null || date +%Z
  register: system_time
  tags: [asset, time]

# ===== 端口服务信息收集 =====
- name: 获取所有端口及其服务名 (详细)
  raw: |
    echo "=== 所有监听端口及服务 ==="
    if command -v ss &>/dev/null; then
      ss -tulnp
    else
      netstat -tulnp
    fi
    echo ""
    echo "=== 所有连接端口及服务 ==="
    if command -v ss &>/dev/null; then
      ss -tunp
    else
      netstat -tunp
    fi
  register: port_service_info
  ignore_errors: true
  tags: [asset, ports, services]

- name: 获取端口与进程对应关系 (lsof)
  raw: |
    echo "=== 端口与进程对应关系 (lsof) ==="
    if command -v lsof &>/dev/null; then
      lsof -i -Pn
    else
      echo "lsof命令不可用"
    fi
  register: lsof_info
  ignore_errors: true
  tags: [asset, ports, services]

- name: 获取所有进程信息 (详细)
  raw: |
    echo "=== 所有进程信息 ==="
    ps aux
    echo ""
    echo "=== 按CPU使用率排序的前20个进程 ==="
    ps aux --sort=-%cpu | head -20
    echo ""
    echo "=== 按内存使用率排序的前20个进程 ==="
    ps aux --sort=-%mem | head -20
  register: ps_info
  tags: [asset, processes]

- name: 获取服务状态信息
  raw: |
    echo "=== 系统服务状态 ==="
    if command -v systemctl &>/dev/null; then
      systemctl list-units --type=service --all --no-pager | head -30
    elif command -v service &>/dev/null; then
      service --status-all 2>/dev/null | head -30
    else
      echo "无法获取服务状态"
    fi
  register: service_status
  ignore_errors: true
  tags: [asset, services]

- name: 获取当前时间戳
  raw: date
  register: collection_time
  tags: [asset, ports, services, processes]

- name: 保存端口和服务进程信息到本地
  copy:
    content: |
      ========================================
      服务器: {{ inventory_hostname }} ({{ ansible_host }})
      收集时间: {{ collection_time.stdout }}
      ========================================
      
      ===== 端口与服务信息 =====
      {{ port_service_info.stdout }}
      
      ===== 端口与进程对应关系 =====
      {{ lsof_info.stdout }}
      
      ===== 进程详细信息 =====
      {{ ps_info.stdout }}
      
      ===== 服务状态信息 =====
      {{ service_status.stdout }}
    dest: "/tmp/port_service_ps_{{ inventory_hostname }}.txt"
  delegate_to: localhost
  tags: [asset, ports, services, processes] 